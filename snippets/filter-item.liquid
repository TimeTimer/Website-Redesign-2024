{% assign file_extension = 'png' %}
{%- if scope -%}
  {%- assign scope = scope | prepend: '--' -%}
{%- endif -%}
{% capture filter_id %}filter--{{ filter_value.param_name | url_escape | escape }}--{{ filter_value.label | url_escape | escape }}{{ scope }}{% endcapture %}

<li class="filter-item{% if type == 'swatch' or type == 'chip' %} inline{% endif %}">
  <label
    data-filter
    class="filter-item__content {% if filter_value.count == 0 and filter_value.active == false %}filter-item__content--disabled{% endif %}"
    for="{{filter_id}}"
  >
    <input
      type="checkbox"
      name="{{ filter_value.param_name }}"
      data-value-escaped="{{ filter_value.value | url_escape }}"
      value="{{ filter_value.value }}"
      class="filter-item__input filter-item__checkbox visually-hidden"
      id="{{filter_id}}"
      data-group-name="{{group_name}}"
      data-filter-item-input
      {% if filter_value.active -%}
        checked
      {% endif %}
      {%- if key != blank and val != blank -%}
        data-{{ key }}="{{ val | handle }}"
      {%- endif -%}
      {%- if type == 'swatch' -%}
        aria-label="{{ filter_value.label }}"
      {%- endif -%}
      {% if filter_value.count == 0 and filter_value.active == false %}
        disabled
      {% endif %}
    >
    {%- if type == 'checkbox' -%}
      <div class="filter-input__input filter-item__checkbox">
        {% render 'icon' with icon: 'check' %}
      </div>
    {%- endif -%}

    {%- if type == 'swatch' -%}
      {%- liquid
        if filter_value.display
          if filter_value.display.type == 'colors'
            assign angle = 0
            assign angle_increment = 360 | divided_by: filter_value.display.value.size

            capture conic_gradient
              for color in filter_value.display.value
                echo '[[c]] [[a]]deg' | replace: '[[c]]', color | replace: '[[a]]', angle
                assign angle = angle | plus: angle_increment
                echo ' [[a]]deg' | replace: '[[a]]', angle

                unless forloop.last
                  echo ', '
                endunless
              endfor
            endcapture

            assign filter_swatch_style = 'background: conic-gradient([[cg]]);' | replace: '[[cg]]', conic_gradient
          else
            assign image_url = filter_value.display.value | image_url: width: 24
            assign filter_swatch_style = filter_swatch_style | append: ' background-image: url([[csi]]);' | replace: '[[csi]]', image_url
          endif
        else
          assign swatch_handle = filter_value.label | handle
          assign custom_swatch_image = swatch_handle | append: '.' | append: file_extension | file_url
          assign filter_swatch_style = 'background-image: url([[csi]]); background-color: [[sh]];' | replace: '[[csi]]', custom_swatch_image | replace: '[[sh]]', swatch_handle
        endif
      -%}

      <div
        class="filter-item__swatch"
        style="{{ filter_swatch_style }} "
      ></div>
    {%- endif -%}

    {% # Commenting this out for now as chips don't actually display, and we don't have any associated styles. %}
    {% comment %}
      {%- if type == 'chip' -%}
        <div class="filter-item__chip">
          {{ filter_value.label }}
        </div>
      {%- endif -%}
    {% endcomment %}

    <span class="filter-item__label fs-body-base">
      {{ filter_value.label }}
    </span>

    <span class="filter-item__count fs-body-base">{{ filter_value.count }}</span>
  </label>
</li>
